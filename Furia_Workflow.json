{
  "name": "Furia Workflow",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "c1976deb-3330-4280-9b1e-759a2b1abbcd",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -60,
        1320
      ],
      "credentials": {
        "openAiApi": {
          "id": "9bpHk499fzyl6uSj",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "377dcd56-2efa-4fcb-bda3-b008a6305e5c",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -2740,
        1700
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "c24ee442-bf41-4c97-aab1-81846bf5ce4f",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -2820,
        1740
      ],
      "credentials": {
        "openAiApi": {
          "id": "9bpHk499fzyl6uSj",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Busca Info no RAG",
        "height": 80,
        "width": 250,
        "color": 5
      },
      "id": "fea3898e-e346-4be3-97c6-95b081d5813c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -180,
        1480
      ]
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 80,
        "width": 1493,
        "color": 5
      },
      "id": "a16787ee-77e2-410a-b5ca-cdc3132fd39f",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4600,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "c2a2b679-23df-4103-8f16-63fab1933cc1",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -3640,
        1480
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "a9xC8uoyvV7aKsTE",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 12
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1zaJQSdkyy28xRDiv_2UN3x2nffvFgb9O",
          "mode": "list",
          "cachedResultName": "Furia",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1zaJQSdkyy28xRDiv_2UN3x2nffvFgb9O"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "3fda743d-c9fb-444e-8702-2f2496a5de27",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -4540,
        1420
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "a9xC8uoyvV7aKsTE",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "hour": 9
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1zaJQSdkyy28xRDiv_2UN3x2nffvFgb9O",
          "mode": "list",
          "cachedResultName": "Furia",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1zaJQSdkyy28xRDiv_2UN3x2nffvFgb9O"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "1bf2061c-6dd3-45c0-a0ec-8f765e922a51",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -4540,
        1620
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "a9xC8uoyvV7aKsTE",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "f77873f7-a02f-4330-bccc-e9a7264329b9",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3220,
        1680
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "40a14a61-209a-4ac6-9128-30ba073a3b0e",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -340,
        1440
      ],
      "credentials": {
        "openAiApi": {
          "id": "9bpHk499fzyl6uSj",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e50b3f30-2ca3-43d4-af94-5317ef4a8e02",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4360,
        1460
      ]
    },
    {
      "parameters": {
        "content": "# Agente IA",
        "height": 80,
        "width": 276,
        "color": 5
      },
      "id": "a91717f2-503e-4fad-a5a1-8b0d00940f70",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -380,
        560
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "c6b8d138-fb4d-4bfc-90f4-63dbdedff3f0",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3220,
        1300
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "37f6ea93-2008-43a3-acaf-948d77766f09",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -3080,
        1480
      ]
    },
    {
      "parameters": {},
      "id": "f7ab77f0-665d-43eb-9cd2-0ad5a67490db",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -2580,
        1840
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "4e38f7fd-2d3f-4cd0-bbdc-34ce05340a52",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -2940,
        1480
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "72dccddb-bbdd-47e2-9daf-fb12fef1ef48",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -3460,
        1480
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "1bd1a3b3-f122-4de9-b5bc-6f3ebc2a182d",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -2760,
        1480
      ],
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "c30a947f-1bd1-4d5b-bf6b-a443c076fae2",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -360,
        1320
      ],
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "91ba5293-8e79-47e7-8492-2129a192db27",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3220,
        1480
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 820,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -400,
        540
      ],
      "typeVersion": 1,
      "id": "b3a84bef-9ebc-4e67-8aac-977299ec21f2",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "",
        "height": 400,
        "width": 480,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -400,
        1180
      ],
      "typeVersion": 1,
      "id": "10e2e22f-d523-4bfc-a965-ebbdc3cc9195",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "",
        "height": 800,
        "width": 2180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4620,
        1180
      ],
      "typeVersion": 1,
      "id": "acd67177-23fb-4ef7-b5d9-8d36b9f40aba",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta específica > Verificar o tipo de arquivo e realizar conversão > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4600,
        1880
      ],
      "typeVersion": 1,
      "id": "24dbcf38-723d-4e8b-a0ca-0c9b1ada56d0",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 480,
        "width": 213,
        "color": 5
      },
      "id": "ae34f38f-7e84-436f-9c30-8a4ae3a0b0d0",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4580,
        1320
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3140,
        900
      ],
      "id": "1f61e1ec-1c08-49e0-beb1-e8fea062323a",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2960,
        900
      ],
      "id": "b51e6cd9-ab51-494a-8012-674a101b13e4",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -2840,
        1000
      ],
      "id": "1304b775-f310-4e73-a70d-cb9dd76677b1",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $json.data }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2700,
        1000
      ],
      "id": "dabd8beb-7055-4e25-9f2c-eb441051b3ad",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "177f04b0-3431-451d-9ed2-7509a885f03a",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        640,
        320
      ],
      "credentials": {
        "openAiApi": {
          "id": "9bpHk499fzyl6uSj",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b3caf746-ff1e-4233-8e28-b0d0aaefb78a",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1080,
        140
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "b950ca4b-6065-417b-8ca5-8429d017aaf5",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        780,
        300
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi excluído ou alterado)\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formatação: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "5af9084d-178f-48e1-a6dc-00438d2a60f5",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        620,
        140
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 1100,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1520,
        540
      ],
      "typeVersion": 1,
      "id": "f934b453-755c-414c-ade0-aee670bb943f",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "",
        "height": 560,
        "width": 1180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        -140
      ],
      "typeVersion": 1,
      "id": "1a1a6838-3957-4082-be9b-d917785461c6",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "# Divisão de Mensagens Inteligente - Texto",
        "height": 80,
        "width": 736,
        "color": 5
      },
      "id": "42b9d04f-9a83-4c8a-9c18-85277bc6baca",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        -120
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 620,
        "width": 880,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2420,
        540
      ],
      "typeVersion": 1,
      "id": "5e987792-e3a5-462f-bf38-e1e9a203fc92",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 740,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3180,
        720
      ],
      "typeVersion": 1,
      "id": "94a68386-bb1a-4178-a431-4062504b3536",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "# Gera/Consulta sessionId",
        "height": 80,
        "width": 596,
        "color": 5
      },
      "id": "260e2695-e953-4449-b208-3381901313e7",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3160,
        740
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0985904e-7d4e-4fba-ae26-2c44200855e1",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "83ec23a1-2f2c-4533-86e0-a52744f0886a",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        260,
        600
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 780,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4360,
        720
      ],
      "typeVersion": 1,
      "id": "47303dc4-c418-4776-976d-9fbb13bd19fb",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -360,
        940
      ],
      "id": "6e801e43-fc29-4e43-9134-b17ce33db790",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "9bpHk499fzyl6uSj",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtém os valores dos nós anteriores\nconst sessionid1 = $input.item.json.data;  // Do nó \"Gerar sessionID\"\nconst sessionid2 = $input.item.json.sessionid;  // Do nó \"Supabase\"\n\n// Retorna apenas o que existir, chamando sempre de \"sessionId\"\nreturn [{ sessionId: sessionid1 || sessionid2 || null }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2580,
        840
      ],
      "id": "860ab968-28e9-4602-a412-4c4203007ea2",
      "name": "Code1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensagem_completa }}",
        "options": {
          "systemMessage": "={\n  \"DataAtual\": \"{{ $now.weekdayLong }},{{ $now.format('dd/MM/yyyy') }},{{ $now.hour.toString().padStart(2, '0') }}:{{ $now.minute.toString().padStart(2, '0') }}\",\n  \"Agent\": {\n    \"nome\": \"Furiko\",\n    \"personalidade\": \"Especialista em curiosidades da FURIA, empolgado, simpático e apaixonado por esports. Gosta de compartilhar fatos históricos, estatísticas e novidades sobre o time.\",\n    \"Empresa\": \"FURIA Esports\",\n    \"Foco\": \"Foque em informações confiaveis que estão disponiveis em seus arquivos, de forma alguma invente informações\",\n    \"Tools\": \"Utilize as tools para conseguir respostas precisas, interprete toda a estrutura dos arquivos e tenha certeza antes de enviar uma resposta\",\n    \"link do instagram\": \"https://www.instagram.com/furiagg/\",\n    \"objetivo\": \"Encantar os fãs e interessados com informações relevantes sobre o time de CS2 da FURIA, história da organização, jogadores, curiosidades e resultados, passos 1, 2 e 3 devem ser mostrados em todos os inicios de conversação.\",\n    \"pense_como\": \"Um atendente e fã dedicado e bem-informado que adora conversar sobre tudo que envolve a FURIA, sempre com um sorriso e pronto para surpreender com alguma curiosidade legal, não fique preso aos passos do atendimento, seja dinamico.\"\n  },\n  \"passos_do_atendimento\": [\n    {\n      \"passo\": 1,\n      \"descricao\": \"Receber o fã com empolgação e perguntar o que ele gostaria de saber\",\n      \"detalhes\": [\n        \"🐾 Fala, Furioso(a)! Aqui é o contato inteligente da FURIA!\nQuer ficar por dentro de tudo? Desde a história da FURIA, nossos times, acompanhar jogos ao vivo, campeonato de clipadores, trend topics, comunidade, até acompanhar os streamers ao vivo ? Tá tudo aqui!\ncaso queira saber todas as funcionalidades, só informar!!\n\nAinda rola pedir dicas de looks na lojinha e agilizar suas compras!\n\nE o melhor: várias interações fazem você acumular FURIA Cash, que podem virar prestígio, recompensas, experiências exclusivas e muito mais! 🖤🔥\n\nVem ganhar junto com a FURIA! \n⚠ Esse contato inteligente está na versão beta e pode conter bugs e informações imprecisas. ⚠\"\n      ]\n    },\n    {\n      \"passo\": 2,\n      \"descricao\": \"explicar as funcionalidades\",\n      \"detalhes\": [\n        \"Opa! As funcionalidades que tenho neste menu são essas abaixo\n⚡ Acompanhe jogos ao vivo\n\n🎯 Campeonato de Clipadores\n\n📅 Calendário de Jogos\n\n🛒 Lojinha da Pantera\n\n📰 Esports News / Trend Topics\n\n🎥 Criadores de Conteúdo e Streamers\n\"\n      ]\n    },\n    {\n      \"passo\": 3,\n      \"descricao\": \"Acompanhe jogos ao vivo se necessário\",\n      \"detalhes\": [\n        \"Aqui no perfil Hltv da FURIA você encontrará tudo sobre atuais e próximas partidas do seu time do coração!!: https://www.hltv.org/team/8297/furia#tab-matchesBox\"\n      ]\n    },\n    {\n      \"passo\": 4,\n      \"descricao\": \"Campeonato de Clipadores se necessário\",\n      \"detalhes\": [\n        \"📢 #FURIAClips - Temporada 1 🎬🔥  \n\n🎊 PRÊMIO TOTAL: R$20.000 🎉💰\n\n🗓 INÍCIO: 09/04/2025\n🏁 TÉRMINO: 27/05/2025 23:59h\n\nREGULAMENTO COMPLETO (AO PARTICIPAR VOCÊ ACEITA O REGULAMENTO): \n\"https://drive.google.com/file/d/1OH-KNwy8tataSKF1xUha0tOnfpOZvIap/view?usp=sharing\"\n\nQUER APRENDER A CLIPAR COM OS MELHORES?\n\"http://clipadas.com\" - Mestre Das Clipadas | Clipadores Brasil\n\n⚡ REGRAS DA COMPETIÇÃO:  \n✅ Redes: YouTube (shorts e vídeo), Instagram (Reels), TikTok e Twitch (clip)\n✅ #FURIAClips #FURIA #FURIAGG #DIADEFURIA obrigatórias em todas as postagens \n✅ IMPORTANTE: cadastre os links dos clips que você quer concorrer no menu da competição\n\n✅ Seu clip com maior número views é que vai te representar na competição\n✅ No perfil do canal de Clipes, adicionar na BIO o CTA “Quer ser um clipador também? Cadastre-se https://wa.me/5511993404466“\n✅ Apenas clipes de influenciadores FURIA ou da própria FURIA \n\n✅ Permitido usar mais de uma conta por rede \n\n❌ Proibido repostar vídeos de outros canais \n❌ Clipes criados fora da data da competição não contam\n❌ Clipes que promovam hate, preconceito, xenofobia, conteúdos discriminatórios e afins (ban)\n\nNão seguir as regras leva a desclassificação e possível banimento.\n\n🏆 Premiação do Campeonato 🏆\n🥇 1° Lugar: R$ 4.000,00\n🥈 2° Lugar: R$ 3.000,00\n🥉 3° Lugar: R$ 2.500,00\n🏅 4° Lugar: R$ 2.000,00\n🎖 5° Lugar: R$ 1.500,00\n🔥 6° Lugar: R$ 1.000,00\n🔥 7° Lugar: R$ 1.000,00\n🔥 8° Lugar: R$ 1.000,00\n🌟 9° Lugar: R$ 750,00\n🌟 10° Lugar: R$ 750,00\n11°-15° Lugar: R$ 500,00\n\n\n📂 CONTEÚDOS OFICIAIS DA FURIA:  \n🎥 Acesse os vídeos completos para criar seus clipes: Google Drive - \n\"https://drive.google.com/drive/folders/1dExPsTn3vsSMC9YywKBEMDcfZKAtz5CQ\"\n\n\n🎥 FERRAMENTAS ÚTEIS:  \n🎞 Editor de vídeo: \nCapCut - \"https://www.capcut.com/\"  \n\n📥 Baixar clipes: \nClipr - \"https://clipr.xyz/\"\nUnTwitch - \"https://untwitch.com/\"\nClipsey - \"https://clipsey.com/\"  \n\n📹 Gravar tela: \nScreen Recorder (Android) - \"https://play.google.com/store/apps/details?id=videoeditor.videorecorder.screenrecorder\"  \n\n🔗 Extensões Chrome: \nTwitch Clip Downloader - \"https://chrome.google.com/webstore/detail/twitch-clip-downloader/klkjnhemebjdikndlpknonjedeefkedk/\"\nCococut Video Downloader - \"https://cococut.net/\"\n\n🖼 Remover fundo: \nRemove.bg - \"https://www.remove.bg/\" \nPicWish - \"https://picwish.com/pt/remove-background\"  \n\n✍ Baixar fontes: \nDaFont - \"https://dafont.com/\"  \n\n\nPS: Qualquer problema com o whatsapp, envie aqui: whatsapp@furia.gg\n🚀 Bora clipar e dominar a competição! #FURIAClips 🎯\"\n      ]\n    },\n    {\n      \"passo\": 5,\n      \"descricao\": \"Calendário de jogos se necessário\",\n      \"detalhes\": [\n        \"[[envie os próximos jogos da furia e/ou próximos campeonatos que irão disputar, tanto furia como furia fe]]\"\n      ]\n    },\n    {\n      \"passo\": 6,\n      \"descricao\": \"Lojinha da pantera se necessário\",\n      \"detalhes\": [\n        \"Aqui no Site da nossa loja você poderá ver todas as nossas opções de roupas especialmente para os fãs da maior organização de E-sports do Brasil, mas caso queira uma ajuda para escolher as peças pode me informar que eu te passo a call!: www.furia.gg \"\n      ]\n    },\n    {\n      \"passo\": 7,\n      \"descricao\": \"Esports News / Trend Topics se necessário\",\n      \"detalhes\": [\n        \"[[pergunte se deseja receber informações sobre o time masculino ou feminino e sane as duvidas recebidas]]\"\n      ]\n    },\n    {\n      \"passo\": 8,\n      \"descricao\": \"Criadores de Conteúdo e Streamers se necessário\",\n      \"detalhes\": [\n        \"Você com certeza já cruzou com algum por aí! 💥 A FURIA acredita que apoiar novos criadores é a grande virada de chave na vida de muita gente.\n\n#Creators:\n-Brino\n- https://x.com/Brunozor\n- https://www.instagram.com/brino/\n- https://www.twitch.tv/brino\n-Cris Guedes\n- https://x.com/crisguedes\n- https://www.instagram.com/crisguedes/\n- https://www.twitch.tv/crisguedes\n-Day\n- https://www.instagram.com/daaygamer/\n- https://x.com/daaygamer\n-Gold Cs Nades\n- https://www.instagram.com/goldcsnades/\n- https://www.youtube.com/@goldcsnades\n- https://www.tiktok.com/@goldcsnades\n-Heldao\n- https://www.instagram.com/heldao23/\n- https://www.tiktok.com/@heldaoo23\n-Manel\n- https://www.instagram.com/omanelzin_/\n- https://www.twitch.tv/omanelzin_\n- https://x.com/oManelzin\n-Negrete\n- https://www.instagram.com/eunegrete/\n-Noobzim\n- https://www.instagram.com/noooobzim/\n- https://www.twitch.tv/noooobzim\n-Paula Nobre\n- https://x.com/paulanobrez\n- https://www.instagram.com/paulanobrez/\n- https://www.twitch.tv/paulanobre\n-Rafinha\n- https://www.instagram.com/raf1nhafps/\n- https://www.twitch.tv/raf1nhafps\n- https://x.com/Raf1nhafps\n-Renan 4fit\n- https://www.instagram.com/renan4fitclub/\n- youtube.com/@4FitClub\n- https://www.tiktok.com/@renan4fitclub\n-Sofia Espanha\n- https://x.com/sofiaespanha\n- https://www.instagram.com/sofiaespanha/\n- https://www.twitch.tv/sofiaespanha/\n-Thiago sem T\n- https://www.instagram.com/thiagosemt/\n- https://www.twitch.tv/thiagosemtlives\n- https://www.youtube.com/@thiagosemt\n-Xarola\n- https://x.com/XAROLAO\n- https://www.twitch.tv/xarola_\n\nSegue a FURIA! 🐾\n\"\n      ]\n    },\n    {\n      \"passo\": 9,\n      \"descricao\": \"Enviar links úteis se necessário\",\n      \"detalhes\": [\n        \"Aqui no Insta da FURIA você vê tudo em primeira mão: {link do instagram}\"\n      ]\n    },\n    {\n      \"passo\": 10,\n      \"descricao\": \"Encerrar com empolgação e convite para voltar\",\n      \"detalhes\": [\n        \"Curtiu o papo? Sempre que quiser saber mais sobre a FURIA, é só chamar! GG \"\n      ]\n    }\n  ],\n  \"regras_de_atuacao\": [\n    {\n      \"limites\": [\n        \"Responder apenas sobre assuntos relacionados à FURIA Esports e seus jogadores, história, títulos e estatísticas.\",\n        \"Evitar palpites ou informações não verificadas. Sempre basear as respostas em fatos conhecidos.\",\n        \"Encaminhar para canais oficiais em caso de dúvidas sobre produtos, loja ou eventos presenciais.\",\n        \"Manter o tom sempre positivo, animado e acolhedor, mesmo em perguntas críticas.\"\n      ]\n    }\n  ],\n  \"estrategia_de_engajamento\": [\n    \"Usar frases de efeito como 'Essa é de cair o queixo!' ou 'Aposto que você não sabia dessa...'\",\n    \"Utilizar datas e eventos históricos marcantes para criar conexão emocional com o fã.\",\n    \"Mencionar recordes e estatísticas impressionantes com entusiasmo.\"\n  ],\n  \"estilo_de_comunicacao\": [\n    \"Chamar o fã pelo nome, se fornecido, para deixar o papo mais próximo.\",\n    \"Usar emojis de forma leve para expressar empolgação.\",\n    \"Ser direto e claro, mas sempre empolgado: 'O FalleN entrou na FURIA em 2023, trazendo toda sua experiência de Major Winner!'\",\n    \"Fazer uma pergunta por vez, para estimular mais interações.\",\n    \"Não repetir curiosidades e frases prontas a menos que o fã peça para reforçar ou quiser mais detalhes.\"\n  ]\n}\n"
        }
      },
      "id": "b2e062bf-3570-4d98-98e7-0c86f8704ead",
      "name": "Atendente",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -220,
        740
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3720,
        500
      ],
      "typeVersion": 1,
      "id": "313d7721-5141-46cc-a30e-2226827bf6cb",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3200,
        280
      ],
      "typeVersion": 1,
      "id": "aa95b1d9-0c5e-48ed-a697-b7c6d5ae590e",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -3820,
        1460
      ],
      "id": "2f549ed6-3698-4c0e-a427-365eb23ee5f1",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2680,
        500
      ],
      "typeVersion": 1,
      "id": "276a72c5-dbfd-41cb-a9b8-7bff6dcf4975",
      "name": "Sticky Note37"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Code1').item.json.sessionId }}",
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -240,
        940
      ],
      "id": "1c5c78c3-5969-4b4b-8012-26aff2c5f46d",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "diegoworkflow",
        "options": {}
      },
      "id": "a8d15a2a-23df-45f1-87d5-3bb4ec3838b2",
      "name": "Webhook EVO",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -4540,
        900
      ],
      "webhookId": "75c7f69d-e6fe-4fb5-8122-f89028e4eff2"
    },
    {
      "parameters": {
        "content": "# Pausa para Atendimento Humano",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "d26c5a92-a003-41fe-8189-c33db1ffba10",
      "name": "Sticky Note41",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4340,
        740
      ]
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "width": 360,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3560,
        720
      ],
      "typeVersion": 1,
      "id": "efee8f03-558d-4fc1-986e-9d97f41a9711",
      "name": "Sticky Note42"
    },
    {
      "parameters": {
        "content": "# Dados",
        "height": 80,
        "width": 150,
        "color": 5
      },
      "id": "0c848017-5670-44a5-914f-550072b74acf",
      "name": "Sticky Note43",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3540,
        740
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "221701",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Envia para Atendente"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "820760d6-3546-4007-8917-55d366a74261",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "221701",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Transfere para Atendente"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        120,
        780
      ],
      "id": "b33929d4-3608-4ddc-99a3-8941af78b635",
      "name": "Switch2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2000,
        1060
      ],
      "id": "58574354-1cdc-4142-8633-e988e8890f0d",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "9bpHk499fzyl6uSj",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 400,
        "width": 2200,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        760
      ],
      "typeVersion": 1,
      "id": "b22bc9f9-f241-41e4-95cc-7db2f8ed7366",
      "name": "Sticky Note44"
    },
    {
      "parameters": {
        "content": "# AVISAR NOVO LEAD NO GRUPO",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "ab35fa05-0283-4a62-ba6c-ff6ba862079e",
      "name": "Sticky Note45",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        780
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "teste-01",
        "remoteJid": "={{ $('Variáveis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 3200,
          "linkPreview": false
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1300,
        160
      ],
      "id": "fa711c4c-6ce4-495c-be25-ac3b3256f31a",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "qtCf8auimxyJxUNs",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "teste-01",
        "remoteJid": "={{ $('Variáveis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        520,
        880
      ],
      "id": "8166ffa3-abea-47c9-a148-3b7ff6e688b6",
      "name": "Evolution API1",
      "credentials": {
        "evolutionApi": {
          "id": "qtCf8auimxyJxUNs",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "teste-01",
        "remoteJid": "+5548988243105",
        "messageText": "=🚨 Novo Lead: wa.me/{{ $('Variáveis').item.json.telefone.split('@')[0] }} 🚨\n Cliente: {{ $('Webhook EVO').item.json.body.data.pushName }}\n\nCASO:\n{{ $json.text }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2340,
        880
      ],
      "id": "27bfc6be-14f6-44be-a607-c38396b8a181",
      "name": "Evolution API2",
      "credentials": {
        "evolutionApi": {
          "id": "qtCf8auimxyJxUNs",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1100,
        -360
      ],
      "id": "63dbad91-1815-43bc-961f-b548e5197a2d",
      "name": "Merge1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "defac08a-6745-422b-bb05-90da9f47d91b",
              "leftValue": "={{ $('Busca Telefone').last().json.values() }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        640,
        -400
      ],
      "id": "03becfe4-1b73-4be5-93f8-c5ea04ec0b67",
      "name": "If4"
    },
    {
      "parameters": {
        "content": "",
        "height": 380,
        "width": 1180,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        -540
      ],
      "typeVersion": 1,
      "id": "6b472ae8-416f-48b8-850b-b79e5ce778d9",
      "name": "Sticky Note54"
    },
    {
      "parameters": {
        "content": "# Cadastra Chat Supabase",
        "height": 80,
        "width": 450,
        "color": 5
      },
      "id": "a8b34706-01b2-4122-88b9-ffc94564ee44",
      "name": "Sticky Note55",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        -520
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "teste-01",
        "remoteJid": "={{ $('Variáveis').item.json.telefone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {
          "delay": 1200
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        640,
        -20
      ],
      "id": "d22608a4-64c5-409e-95f3-13b8162258f2",
      "name": "Evolution API5",
      "credentials": {
        "evolutionApi": {
          "id": "qtCf8auimxyJxUNs",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "app",
              "condition": "eq",
              "keyValue": "petshop"
            },
            {
              "keyName": "updated_at",
              "condition": "gt",
              "keyValue": "={{ $now.plus(5,'minutes') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        300,
        1240
      ],
      "id": "870c4c5b-d060-48df-a6df-31a4015ed682",
      "name": "ListChats-Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chat_messages",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $json.phone }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        740,
        1260
      ],
      "id": "07e03b59-449e-4a07-b37b-2e3fdcfa98c8",
      "name": "ListMessages-Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 10-16/2 * * 1-5"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        140,
        1240
      ],
      "id": "921a6609-0d7c-4706-bccc-d403367cc09d",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "chat_messages",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Aggregate1')?.item?.json?.conversas?.last()?.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "active",
              "fieldValue": "false"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2300,
        1360
      ],
      "id": "d0cd0aa6-024e-40b9-99d0-110533178b2d",
      "name": "DisableMessage-Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c9c00627-84a9-49a9-bc7e-d923a5918346",
              "name": "output",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "0e34f673-b6dc-4748-89d2-a178dfe91853",
              "name": "phone",
              "value": "={{ $('Aggregate1').item.json.conversas.last().phone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1940,
        1200
      ],
      "id": "2a1596b0-da23-43e6-b10b-edda6a179845",
      "name": "SetConfig"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# Você é um agente facilitador de vendas e está buscando conversas não finalizadas entre o cliente e um agent de IA. \n\n# Cria a responda apenas a resposta não precisa justificar sua resposta\n\n# Identifique o cliente não enviou mais mensagens de resposta\n\n# Se o cliente não responder mesmo assim, agradeça e diga que irá encerrar o pedido e está a disposição para outros pedidos\n\n# Use frase simples e naturais como nos exemplos\n\nExemplos : \n - 'Oi .. ainda está ai'\n - 'E ai ? vamos finalizar o pedido?' \n\n# Conversa entre o cliete e o agente de IA:\n{{ $json.texto }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        1640,
        1200
      ],
      "id": "1a81e4cb-febf-4384-8506-472aa3273f00",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "inputText": "={{ $json.texto }}",
        "categories": {
          "categories": [
            {
              "category": "pendente_resposta",
              "description": "A conversa está pendente devido a uma informação que o cliente ficou de fornecer ou confirmar"
            },
            {
              "category": "encerrada",
              "description": "Houve um desfecho da conversa e o agente de IA se despediu"
            },
            {
              "category": "sem_resposta",
              "description": "=Se o cliente não respondeu mais as mensagens do agente - mensagem do cliente vazia"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        1200,
        1260
      ],
      "id": "db5b8d07-b3bd-498d-9038-52438b2526d6",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "conversas",
        "include": "specifiedFields",
        "fieldsToInclude": "id,message_type,created_at,user_message, bot_message,phone, conversation_id",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        900,
        1260
      ],
      "id": "4835c000-656c-4856-8fb8-7562f93a85a9",
      "name": "Aggregate1"
    },
    {
      "parameters": {
        "jsCode": "return $('Aggregate1').all().map(item => {\n  // Tenta acessar a propriedade 'conversas' e verifica se ela é um array\n  const conversas = item.json.conversas || []; // Garante que é pelo menos um array vazio\n\n  if (!Array.isArray(conversas)) {\n    throw new Error(\"A propriedade 'conversas' não é um array.\");\n  }\n\n  // Processa cada conversa e verifica as mensagens\n  const textoUnico = conversas.map(conversa => {\n    const cliente = conversa.user_message || \"sem mensagem do chatbot\";\n    const agente = conversa.bot_message || \"sem resposta\";\n    \n    // Verifica se a data existe e formata\n    const dataOriginal = conversa.created_at || \"Data da Mensagem indisponível\";\n    const dataFormatada = dataOriginal !== \"Data da Mensagem indisponível\"\n      ? formatarData(dataOriginal)\n      : dataOriginal;\n\n    return `em: ${dataFormatada}\\n\\n - agente(chatbot): ${agente} \\n - cliente: ${cliente}\\n`;\n  }).join('\\n\\n');\n\n  // Retorna o texto final como resultado\n  return {\n    json: {\n      texto: textoUnico\n    }\n  };\n});\n\n// Função para formatar a data\nfunction formatarData(dataString) {\n  const data = new Date(dataString); // Converte a string em objeto Date\n  if (isNaN(data)) {\n    return \"Data inválida\"; // Retorna se a data não for válida\n  }\n  \n  // Formata no padrão DD/MM/YYYY HH:mm\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // Mês começa em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} ${horas}:${minutos}`;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1060,
        1260
      ],
      "id": "a5e67006-0d98-46fe-ac0b-4cb0866a860b",
      "name": "Code4"
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().phone }}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().phone }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().message_type }}"
            },
            {
              "fieldId": "bot_message",
              "fieldValue": "={{ $json.text }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1940,
        1360
      ],
      "id": "4b6d464e-c883-409c-9eba-b4f1c78ae135",
      "name": "Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        500,
        1240
      ],
      "id": "b02bd30f-940e-4372-95cd-8e915794a6bc",
      "name": "Loop Over Items2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1620,
        1340
      ],
      "id": "d81c3bf8-5c96-4b07-a0b8-2bbbd0b51516",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "9bpHk499fzyl6uSj",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2120,
        1360
      ],
      "id": "37f46f33-e552-4606-90da-14c027a5389e",
      "name": "Wait2",
      "webhookId": "a8c16821-f07f-41b7-842b-80060731daf4"
    },
    {
      "parameters": {
        "content": "",
        "height": 400,
        "width": 2540,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        1180
      ],
      "typeVersion": 1,
      "id": "bb864b86-a4ff-465f-bab8-5ad0e7b2685a",
      "name": "Sticky Note58"
    },
    {
      "parameters": {
        "content": "# Follow up",
        "height": 80,
        "width": 253,
        "color": 5
      },
      "id": "7e6a135a-529e-422f-b78a-4f436fb5834f",
      "name": "Sticky Note59",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        120,
        1480
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "teste-01",
        "remoteJid": "={{ $json.phone }}",
        "messageText": "={{ $json.output }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2100,
        1200
      ],
      "id": "96eaaaf7-947d-41d4-a0d0-8c98e6af4d66",
      "name": "Evolution API6",
      "credentials": {
        "evolutionApi": {
          "id": "qtCf8auimxyJxUNs",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1220,
        1420
      ],
      "id": "696b08fc-9926-476e-ae27-b15873295d5a",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "9bpHk499fzyl6uSj",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "custom",
        "customFormat": "dd-MM-yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -3340,
        900
      ],
      "id": "6493e70b-896e-420d-bad2-39cd88bc6c15",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            },
            {
              "keyName": "app",
              "keyValue": "drana"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        500,
        -400
      ],
      "id": "d1bac9df-4c2e-45d8-8310-3a36f5273049",
      "name": "Busca Telefone",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "chats",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            },
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now}}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $('Code1').item.json.sessionId }}"
            },
            {
              "fieldId": "app",
              "fieldValue": "drana"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        880,
        -460
      ],
      "id": "20b30201-5c7f-4052-a0d9-0691aad240fa",
      "name": "Adiciona CHAT supabase",
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Variáveis').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        880,
        -300
      ],
      "id": "004a68d1-affb-4fa3-b1ca-db8d42787ed6",
      "name": "Atualiza CHAT Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $json.phone }}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $json.phone }}"
            },
            {
              "fieldId": "bot_message",
              "fieldValue": "={{ $('Atendente').item.json.output }}"
            },
            {
              "fieldId": "user_message",
              "fieldValue": "={{ $('Variáveis').item.json.mensagem }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('Variáveis').item.json.body.event }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1280,
        -360
      ],
      "id": "21c3e0a6-5bf4-438c-98bf-5635ec124074",
      "name": "Cria Histórico Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7c4cdb12-9452-42a6-a39a-c268bd38dce1",
              "leftValue": "={{ $json.output.lenght }}",
              "rightValue": 90,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        480,
        60
      ],
      "id": "1dcde265-79e5-4905-8d33-21f897e5d40c",
      "name": "Menos que 240 Caracteres"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "e45f880e-dff1-4ad3-aa28-0c5d76b0a867",
      "name": "Split de Mensagem",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        920,
        140
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "59815873-bc1a-4f62-8bf1-39fdfb693550",
      "name": "1 segundo",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1440,
        160
      ],
      "webhookId": "371bc357-bf08-48a4-a9ca-a5b0f80bd40f"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4000,
        1460
      ],
      "id": "ddc3bc0e-297c-490a-9b52-5326ec82d544",
      "name": "Retorna ID do arquivo"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "70e09842-53d6-48ed-803b-6cca1937239a",
      "name": "Deleta linhas antigas do documento",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4200,
        1460
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3660,
        300
      ],
      "id": "f766994d-e312-4029-be35-72371ce597bf",
      "name": "Cria Tabela Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2620,
        300
      ],
      "id": "3ffae986-886d-4a17-8419-ad29efbd5d5a",
      "name": "Cria Tabela Documentos",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documents",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2620,
        520
      ],
      "id": "64df636e-1a2d-41f5-8086-6bae02baf691",
      "name": "Deleta Conteúdo Documentos",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2940,
        280
      ],
      "typeVersion": 1,
      "id": "621be9e5-d77f-460b-89ce-4fe04d34830a",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2680,
        280
      ],
      "typeVersion": 1,
      "id": "0f773deb-37f9-45a7-9d46-0ebbde65331b",
      "name": "Sticky Note48"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3980,
        280
      ],
      "typeVersion": 1,
      "id": "182373d5-4603-4718-8cd1-4071c15b701c",
      "name": "Sticky Note49"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3460,
        280
      ],
      "typeVersion": 1,
      "id": "52edc2e3-e550-4e7e-a363-b14c658415c3",
      "name": "Sticky Note50"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3200,
        500
      ],
      "typeVersion": 1,
      "id": "71335a73-1b83-4f67-bc25-7b0350f72f7d",
      "name": "Sticky Note56"
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3720,
        280
      ],
      "typeVersion": 1,
      "id": "8ee415b1-b2f8-4bae-b6f9-64067dc8df9d",
      "name": "Sticky Note57"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3660,
        540
      ],
      "id": "d66a34e5-6155-494c-8f78-dadb997b47d9",
      "name": "Deleta Histórico",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2880,
        300
      ],
      "id": "f9cf62af-263d-4acc-885d-9766462713eb",
      "name": "Cria função Busca em Vetor",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create extension vector;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3140,
        300
      ],
      "id": "4dfd72ed-6bfd-4600-b6c5-842b03ca82ee",
      "name": "Cria Extensão Vetor",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table chats (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  phone text,\n  updated_at text, \n  app text,\n  conversation_id text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3400,
        300
      ],
      "id": "2d10717b-b3b5-4639-b5a2-2f630cd15992",
      "name": "Cria Tabela Chats",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2940,
        500
      ],
      "typeVersion": 1,
      "id": "a3eb5d3d-4b68-450f-b09c-09a254c4a4ea",
      "name": "Sticky Note65"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chats",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -2880,
        520
      ],
      "id": "06339a3a-4abb-4dbe-a9af-221532aa177e",
      "name": "Deleta Conteúdo Chats",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3140,
        520
      ],
      "id": "4fc0b657-fb3e-4148-84af-4473ff40b33e",
      "name": "Deleta Conteúdo Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3460,
        500
      ],
      "typeVersion": 1,
      "id": "f3d1174e-56bd-485d-bf67-f8373bc21437",
      "name": "Sticky Note66"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chat_messages",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3400,
        520
      ],
      "id": "17404eec-26f0-4932-8756-e492446a77b9",
      "name": "Deleta Conteúdo Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE chat_messages (\n  id BIGSERIAL PRIMARY KEY,\n  created_at TIMESTAMPTZ, \n  phone TEXT,\n  conversation_id TEXT, \n  bot_message TEXT,\n  user_message TEXT, \n  message_type TEXT,\n  active BOOLEAN DEFAULT TRUE\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -3920,
        300
      ],
      "id": "dd703579-574b-4e34-8cb7-ed6aacad9086",
      "name": "Cria Tabela Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "zz50qLnqoUJjNAzK",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4620,
        720
      ],
      "typeVersion": 1,
      "id": "370bdf42-a5c9-4824-909c-e7b72befae81",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "content": "# Webhook",
        "height": 100,
        "width": 196,
        "color": 5
      },
      "id": "c173fa12-6d93-4a0f-b1a3-5b24bdea0886",
      "name": "Sticky Note67",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4600,
        740
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "892adacc-2693-4dce-ae05-74063937405b",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -2220,
        1000
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8845fde4-78c1-4dee-8533-e8cd2b3ca766",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2360,
        1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook EVO').item.json.body.data.message.imageMessage.caption }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "62eee0c4-d9a4-431e-9bf8-de1386171f0a",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1920,
        1000
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "6536d88f-0b36-4119-b9dd-393b542a6f9d",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1740,
        1000
      ],
      "credentials": {
        "redis": {
          "id": "hcFMnE96UQnXXHrc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "39926590-34ca-43f3-8223-290c4b0d313f",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1740,
        860
      ],
      "credentials": {
        "redis": {
          "id": "hcFMnE96UQnXXHrc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "22ec3733-8eaa-4943-a1a1-f666f40ac9b6",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2360,
        760
      ]
    },
    {
      "parameters": {
        "content": "# Mensagem Picotada",
        "height": 80,
        "width": 396,
        "color": 5
      },
      "id": "739672f3-eaf2-4d70-b0f2-54688c0a5cd3",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1160,
        580
      ]
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Resumo curto da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "25e5c89f-db3c-424a-8d68-3f0f1b1b4de9",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -2060,
        1000
      ],
      "credentials": {
        "openAiApi": {
          "id": "9bpHk499fzyl6uSj",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $json.Redis2 }}",
              "rightValue": "={{ $json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "381c97cb-95b4-42d0-a0f8-3de5b70ffc6c",
      "name": "Compara Get Memory1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -820,
        800
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook EVO').item.json.body.data.message.conversation }}",
        "tail": true
      },
      "id": "e04ebf12-d049-4e2c-9e5a-bbeec75f603c",
      "name": "Text Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1940,
        560
      ],
      "credentials": {
        "redis": {
          "id": "hcFMnE96UQnXXHrc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook EVO').item.json.body.data.message.speechToText }}",
        "tail": true
      },
      "id": "14907780-251e-418f-b75b-786f310b5184",
      "name": "Audio Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2140,
        800
      ],
      "credentials": {
        "redis": {
          "id": "hcFMnE96UQnXXHrc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0d8e9422-ce54-4367-ab61-cd59f8c9eab2",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1000,
        800
      ]
    },
    {
      "parameters": {
        "amount": 3
      },
      "id": "e4a9f986-881e-498d-8eaf-5c13e8760fce",
      "name": "Wait3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1320,
        800
      ],
      "webhookId": "76bf42d8-71c1-47fb-a7c9-c7366a2f3b8d"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.sessionId }}",
        "options": {}
      },
      "id": "71e63de9-52d7-4b02-9784-15a328fde2eb",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1480,
        800
      ],
      "credentials": {
        "redis": {
          "id": "hcFMnE96UQnXXHrc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.sessionId }}",
        "options": {}
      },
      "id": "b30d5d4b-9347-4875-be0a-94e3c9a39ae6",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1160,
        800
      ],
      "credentials": {
        "redis": {
          "id": "hcFMnE96UQnXXHrc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Code1').item.json.sessionId }}"
      },
      "id": "975b2bb7-8296-4738-b2e8-86672e8a4814",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1500,
        -360
      ],
      "credentials": {
        "redis": {
          "id": "hcFMnE96UQnXXHrc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "name": "user_documents",
        "description": "Contains all the information about prices and andress that you can check to answer user questions.",
        "topK": "=4"
      },
      "id": "d3cd222a-0d31-41a6-863b-fa63034b661c",
      "name": "buscar_documentos",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        -280,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $json.telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2740,
        840
      ],
      "id": "abec2978-9688-4ebd-9e55-7cee9aa1700a",
      "name": "Get Dados",
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "telefone",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.conversation }}{{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage.text }}",
              "type": "string"
            },
            {
              "id": "de1388b1-a6e4-42df-a6a5-7e9b4594f97d",
              "name": "body.event",
              "value": "={{ $('Webhook EVO').item.json.body.event }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "da602dae-7820-4fef-953d-c4345ff3d4e8",
      "name": "Variáveis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3500,
        900
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f16b1bf-1a3e-4029-8d7a-1bccb919ee43",
              "name": "message.message_id",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.id || '' }}",
              "type": "string"
            },
            {
              "id": "11800d83-ecca-4f9c-a878-a2419db0c8e9",
              "name": "message.chat_id",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid || '' }}",
              "type": "string"
            },
            {
              "id": "c33f9527-e661-49e5-8e5e-64f3b430928a",
              "name": "message.content_type",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.audioMessage ? 'audio' : '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage ? 'image' : '' }}",
              "type": "string"
            },
            {
              "id": "06eba1c9-cff0-4f68-b6da-6bb0092466b7",
              "name": "message.content",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage?.text || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.caption || '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "b97f1af3-5361-46fc-9303-d644921231d8",
              "name": "message.timestamp",
              "value": "={{ $('Webhook EVO').item.json.body.data.messageTimestamp.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "dc3dc59c-90a3-4a45-bea2-de092c91083b",
              "name": "message.content_url",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.audioMessage?.url || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.url || '' }}",
              "type": "string"
            },
            {
              "id": "8b01a818-a456-476e-bace-adefe2f04eb4",
              "name": "message.event",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.fromMe ? 'outcoming' : 'incoming' }}",
              "type": "string"
            },
            {
              "id": "b2f1f6b5-292f-4695-9e41-be200c6d7053",
              "name": "instance.name",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "572fcce5-8a26-4e8f-a48a-ef0bee569dcd",
              "name": "instance.apikey",
              "value": "={{ $json.body.apikey }}",
              "type": "string"
            },
            {
              "id": "e90043db-657b-461c-b040-2d6089abfbdb",
              "name": "instance.server_url",
              "value": "={{ $json.body.server_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "326a7c53-07b8-4755-a5d2-0a27202a7f99",
      "name": "dados_para_atendimento_humano1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4280,
        900
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Ativa"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Desativada"
            }
          ]
        },
        "options": {}
      },
      "id": "37cf597d-8e12-4bf8-91cf-4d1c64ee92c6",
      "name": "Switch Block",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -3740,
        1000
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "outcoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outcoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d7b42536-638f-4128-b51b-6aa913e9d9bc",
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            }
          ]
        },
        "options": {}
      },
      "id": "3cc9f502-ee87-4251-9ca9-b8bec1e90885",
      "name": "Switch6",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -4100,
        900
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "app",
              "condition": "eq",
              "keyValue": "drana"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        780,
        880
      ],
      "id": "4bf72996-757b-4cff-8b9f-ac3dc6650ede",
      "name": "ListChats-Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chat_messages",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1300,
        900
      ],
      "id": "2a7cf52c-3b0d-4782-bdf0-f5045446835d",
      "name": "ListMessages-Supabase2",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "w0xjhgUIOg2tTnxM",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "conversas",
        "include": "specifiedFields",
        "fieldsToInclude": "id,message_type,created_at,user_message, bot_message,phone, conversation_id",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1560,
        900
      ],
      "id": "7eca7934-7f75-469f-a360-405901cda007",
      "name": "Aggregate2"
    },
    {
      "parameters": {
        "jsCode": "return $('Aggregate2').all().map(item => {\n  // Tenta acessar a propriedade 'conversas' e verifica se ela é um array\n  const conversas = item.json.conversas || []; // Garante que é pelo menos um array vazio\n\n  if (!Array.isArray(conversas)) {\n    throw new Error(\"A propriedade 'conversas' não é um array.\");\n  }\n\n  // Processa cada conversa e verifica as mensagens\n  const textoUnico = conversas.map(conversa => {\n    const cliente = conversa.user_message || \"sem mensagem do chatbot\";\n    const agente = conversa.bot_message || \"sem resposta\";\n    \n    // Verifica se a data existe e formata\n    const dataOriginal = conversa.created_at || \"Data da Mensagem indisponível\";\n    const dataFormatada = dataOriginal !== \"Data da Mensagem indisponível\"\n      ? formatarData(dataOriginal)\n      : dataOriginal;\n\n    return `em: ${dataFormatada}\\n\\n - agente(chatbot): ${agente} \\n - cliente: ${cliente}\\n`;\n  }).join('\\n\\n');\n\n  // Retorna o texto final como resultado\n  return {\n    json: {\n      texto: textoUnico\n    }\n  };\n});\n\n// Função para formatar a data\nfunction formatarData(dataString) {\n  const data = new Date(dataString); // Converte a string em objeto Date\n  if (isNaN(data)) {\n    return \"Data inválida\"; // Retorna se a data não for válida\n  }\n  \n  // Formata no padrão DD/MM/YYYY HH:mm\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // Mês começa em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} ${horas}:${minutos}`;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1800,
        900
      ],
      "id": "9f4f3dbf-327b-4290-b457-7ab16a19d85a",
      "name": "Code6"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1020,
        880
      ],
      "id": "85a92187-ef11-4243-b5fa-18be4a135ac7",
      "name": "Loop Over Items6"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Você é um agente resumidor de casos dos clientes, você analisa a conversa entre o agente e o cliente e cria um resumo do problema que ele está enfrentando de forma bem detalhada, e gera o resultado sem dicas de uso ou informações extras \n\n# Conversa entre o cliete e o agente de IA:\n{{ $json.texto }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        2040,
        880
      ],
      "id": "4cd29c4b-88df-4cd9-be17-9f3616e12b7a",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "content": "# Filtro de menagem",
        "height": 80,
        "width": 356,
        "color": 5
      },
      "id": "884f8bbf-f69a-45f3-9792-7dcd2bee9f76",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2400,
        560
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.message.chat_id }}_block",
        "value": "true",
        "keyType": "string",
        "expire": true,
        "ttl": 4320000
      },
      "id": "e47e2e7d-106b-4c6a-8dc1-2b78e2c0b93f",
      "name": "PARA IA",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3900,
        840
      ],
      "credentials": {
        "redis": {
          "id": "hcFMnE96UQnXXHrc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "={{ $json.message.chat_id }}_block",
        "options": {}
      },
      "id": "b7b9241d-04aa-4e64-a2d1-6fde9da81c0d",
      "name": "Verificar Atendimento",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3900,
        1000
      ],
      "credentials": {
        "redis": {
          "id": "hcFMnE96UQnXXHrc",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data = $item(0).$node[\"Compara Get Memory1\"].json[\"Redis2\"]; // Obtém o valor de Redis2 do nó \"If\"\n\n// Verifica se o dado é uma string que representa um array, e converte se necessário\nlet array = Array.isArray(data) ? data : JSON.parse(data);\n\n// Junta os elementos do array com um espaço entre eles\nconst mensagem_completa = array.join(\" \");\n\n// Retorna o resultado com o nome da variável \"mensagem_completa\"\nreturn [{ json: { mensagem_completa } }];\n"
      },
      "id": "40f79889-089e-4f78-89a1-78c3de18e26a",
      "name": "Mensagem Completa",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -600,
        780
      ]
    },
    {
      "parameters": {
        "toolDescription": "objetivo\\\": \\\"este é o site da loja mencionada, seu objetivo utilizando ele será ceder informações necessárias para o agente responder necessidades da melhor forma possível,incluindo valores, variaveis de cores e tamanhos de produtos caso solicitado pelo cliente\".\\",
        "url": "https://menswearbrasil.com"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        120,
        980
      ],
      "id": "a84fcb56-829a-41f1-b44f-2e1aa30014ee",
      "name": "HTTP Request",
      "disabled": true
    },
    {
      "parameters": {
        "url": "https://menswearbrasil.com",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3580,
        1680
      ],
      "id": "613b7a02-a2dd-4012-9479-58250242c29d",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "operation": "createFromText",
        "content": "={{ $json.data }}",
        "name": "html-diego-loja",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1Iu1Q7X7kvSWSaMVzVa3j_SC6MA7l_HqM",
          "mode": "list",
          "cachedResultName": "diegoloja",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1Iu1Q7X7kvSWSaMVzVa3j_SC6MA7l_HqM"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -3420,
        1680
      ],
      "id": "25d0ab98-6892-468a-b0d4-f5c9b3e48b4b",
      "name": "Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "a9xC8uoyvV7aKsTE",
          "name": "Google Drive account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Deleta linhas antigas do documento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Get Dados",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Split de Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atendente": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca Telefone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Atendente",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook EVO": {
      "main": [
        [
          {
            "node": "dados_para_atendimento_humano1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API": {
      "main": [
        [
          {
            "node": "1 segundo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API1": {
      "main": [
        [
          {
            "node": "ListChats-Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Cria Histórico Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Adiciona CHAT supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza CHAT Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListChats-Supabase": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListMessages-Supabase": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "ListChats-Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DisableMessage-Supabase": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SetConfig": {
      "main": [
        [
          {
            "node": "Evolution API6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          },
          {
            "node": "SetConfig",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "ListMessages-Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "DisableMessage-Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca Telefone": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona CHAT supabase": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza CHAT Supabase": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Cria Histórico Supabase": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Menos que 240 Caracteres": {
      "main": [
        [
          {
            "node": "Evolution API5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split de Mensagem": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 segundo": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retorna ID do arquivo": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deleta linhas antigas do documento": {
      "main": [
        [
          {
            "node": "Retorna ID do arquivo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Audio Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory1": {
      "main": [
        [
          {
            "node": "Mensagem Completa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Compara Get Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscar_documentos": {
      "ai_tool": [
        [
          {
            "node": "Atendente",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Dados": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_para_atendimento_humano1": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Block": {
      "main": [
        [
          {
            "node": "Variáveis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch6": {
      "main": [
        [
          {
            "node": "PARA IA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Atendimento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Variáveis": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListChats-Supabase2": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListMessages-Supabase2": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items6": {
      "main": [
        [],
        [
          {
            "node": "ListMessages-Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Evolution API2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Atendimento": {
      "main": [
        [
          {
            "node": "Switch Block",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem Completa": {
      "main": [
        [
          {
            "node": "Atendente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "ai_tool": [
        []
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2c8a7f6f-b0dc-4dba-a415-ed4fb50a26b9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "54ebde7fa25da4ec3c5dd6d4b594dcf9bd118a893d1618fa507b1f5f6926704a"
  },
  "id": "mbKvEXbI8dU8DUys",
  "tags": [
    {
      "createdAt": "2025-04-24T16:57:55.224Z",
      "updatedAt": "2025-04-24T16:57:55.224Z",
      "id": "VmOii5KfcWTphBZY",
      "name": "Processo Seletivo"
    }
  ]
}
